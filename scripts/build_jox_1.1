#!/bin/bash
################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under 
# the Apache License, Version 2.0  (the "License"); you may not use this file
# except in compliance with the License.  
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      mosaic@lists.eurecom.fr
################################################################################
# file build_jox
# brief
# author navid nikaein
# company Eurecom
# email: navid.nikaein@eurecom.fr
#
################################
# include helper functions
################################
ORIGIN_PATH=$PWD
THIS_SCRIPT_PATH=$(dirname $(readlink -f $0))
source $THIS_SCRIPT_PATH/tools/build_helper

################################
# set the defaul values and global paramters
################################
jcli=2
################################
# set the default parameters 
################################

function help()
{
  echo_error " "
  echo_error "Usage: build_jox [OPTION]..."
  echo_error "Build the environment."
  echo_error " "
  echo_error "Options:"
  echo_error "Mandatory arguments to long options are mandatory for short options too."
  echo_error "  -c, --clean-env                           generate a clean juju environment. Needed when bootstrap, or machine provisioning fails"
#  echo_error "  -d, --build-doxygen                       Builds doxygen based documentation."
  echo_error "  -e, --environment  [opt]                  set the juju environment, local, manual."
  echo_error "  -f, --force                               No interactive script for installation of software packages."
  echo_error "  -h, --help                                Print this help."
  echo_error "  -i, --install-required-packages           Installs packages necessary to run jox and charms (support Ubuntu 14.04, 16.04)."
  echo_error "  -j, --install-optional-packages           Install useful but not mandatory packages(support Ubuntu 14.04, 16.04)."
  echo_error "  -r, --uninstall-packages                  Install useful but not mandatory packages(support Ubuntu 14.04, 16.04)."
#  echo_error "  -u, --unit-tests                          Trigger unit tests."
  echo_error "  -v, --verbose                             Build process verbose."
  echo_error " "
}

function main()
{
  local -i clean=0
  local -i force=0
  local -i unit_tests=0
  local -i install_packages=0
  local -i uninstall_packages=0
  local -i install_optional_packages=0
  local -i doxygen=0

  jenv=""

  until [ -z "$1" ]
    do
    case "$1" in
      -c | --clean-env)
        clean=1;
        echo "generate a clean juju environment. After this command, juju bootstrap may be needed"
        shift;
        ;;
      -e | --juju-env)
        jenv=$2
        echo "Set the juju environment"
        shift 2;
        ;;
      -f | --force)
        force=1
        echo "force to non-interactive mode, mainly during installation"
        shift;
        ;;
      -h | --help)
        help
        shift;
        exit 0
        ;;
      -i | --install-required-packages)
        echo "install software packages necessary to run jox and charms (support Ubuntu 14.04, 16.04):"
        set_jox_env
        install_packages=1
        shift;
        ;;
      -j | --install-optional-packages)
        echo "install software packages optional to run jox and charms (support Ubuntu 14.04, 16.04):"
        set_jox_env
        install_optional_packages=1
        shift;
        ;;
      -r | --uninstall-packages)
        echo "uninstall all the installed packages"
        uninstall_packages=1
        shift;
        ;;
      -u | --unit-tests)
        echo "Trigger the unit tests"
        unit_tests=1
        shift;
        ;;
      -v | --verbose)
        echo "Make the build process verbose"
        verbose=1
        shift;
        ;;
       *)   
        echo "Unknown option $1"
        help
        exit 1
        ;;
    esac
  done

  
  if [ $uninstall_packages -gt 0 ]; then
      remove_jox_packages $force
      exit 0
  fi

  if [ $install_packages -gt 0 ]; then
      check_install_juju $force
      check_install_jox  $force
  fi

  if [ $install_optional_packages -gt 0 ]; then
      check_install_optional $force
  fi
  
  if [ $clean -gt 0 ]; then
      if [ -f ~/.juju/current-environment ]; then 
	  jenv="$(cat ~/.juju/current-environment)"	 
	  echo_info "generate a clean juju $jenv environment (previous environment)"
	  clean_juju_env $jenv
      else 
	  echo_info "juju environment is not defined"
      fi 
  fi 

  if [ "$jenv" != "" ] ; then 
      if [ -f ~/.juju/current-environment ]; then 
	  current_jenv="$(cat ~/.juju/current-environment)"
	  if [ "$current_jenv" != "$jenv" ]; then 
	      echo_info "generate a clean $jenv environment"
	      clean_juju_env $jenv
	  else 
	      echo_info "juju $jenv environment is already set"
	  fi
      else 
	  clean_juju_env $jenv 
      fi 
  fi
 
  set_jox_env
  
}


main "$@"
